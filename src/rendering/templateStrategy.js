// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.Rendering.TemplateStrategy = (function(_super) {

    __extends(TemplateStrategy, _super);

    TemplateStrategy.prototype.templatePath = "templates";

    TemplateStrategy.prototype.source = "";

    function TemplateStrategy(options) {
      this.setElement(options.renderWithin);
      this.source = JST["" + this.templatePath + "/" + options.source];
      TemplateStrategy.__super__.constructor.apply(this, arguments);
    }

    TemplateStrategy.prototype.render = function(options) {
      this.$el.empty();
      this.template.applyBindings(this.model);
      return this.$el.append(this.template(options));
    };

    TemplateStrategy.prototype.outlet = function(children) {
      var _this = this;
      return this.$("output[data-outlet]").each(function(index, el) {
        var childEls, name;
        if (name = $(el).data("outlet")) {
          return $(el).replaceWith(children[name].el);
        } else {
          childEls = _.map(children, function(child, name) {
            return child.el;
          });
          return $(el).replaceWith(childEls);
        }
      });
    };

    TemplateStrategy.prototype.applyBindings = function(model) {
      var _this = this;
      return this.$("[data-bind]").each(function(index, el) {});
    };

    TemplateStrategy.prototype.template = function(options) {
      return this.source(_.extend(options || {}, {
        context: this.context,
        outlet: this._constructOutlet
      }));
    };

    TemplateStrategy.prototype._constructOutlet = function(outletName) {
      outletName || (outletName = "");
      return "<output data-outlet='" + outletName + "'></output>";
    };

    return TemplateStrategy;

  })(Backbone.View);

}).call(this);
