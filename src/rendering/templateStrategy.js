// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.Rendering.TemplateStrategy = (function(_super) {

    __extends(TemplateStrategy, _super);

    function TemplateStrategy(options) {
      this.setElement(options.renderWithin);
      this.template = this.findTemplate(options.template);
      TemplateStrategy.__super__.constructor.apply(this, arguments);
    }

    TemplateStrategy.prototype.findTemplate = function(name) {
      var templatePath;
      templatePath = "templates";
      return JST["" + templatePath + "/" + name] || (function() {
        throw "Missing template: " + templatePath + "/" + name;
      })();
    };

    TemplateStrategy.prototype.call = function(options) {
      if (options == null) {
        options = {};
      }
      this.$el.empty();
      this.el.innerHTML = this._template({
        context: options.bindTo
      });
      this._applyBindings(options.bindTo);
      return this._outlet(options.children);
    };

    TemplateStrategy.prototype.buildOutlet = function(outletName) {
      outletName || (outletName = "");
      return "<script data-outlet='" + outletName + "'></script>";
    };

    TemplateStrategy.prototype._template = function(options) {
      return this.template(_.extend(options || {}, this._defaultTemplateOptions()));
    };

    TemplateStrategy.prototype._defaultTemplateOptions = function() {
      return {
        outlet: this.buildOutlet
      };
    };

    return TemplateStrategy;

  })(Traction.Rendering.NodeStrategy);

}).call(this);
