// Generated by CoffeeScript 1.8.0
(function() {
  Object.prototype.delegate = function() {
    var args, delegation, method, methods, options, prefixedMethod, _i, _len, _ref, _results;
    args = Array.prototype.slice.call(arguments);
    _ref = [args.slice(0, +(args.length - 2) + 1 || 9e9), args[args.length - 1]], methods = _ref[0], options = _ref[1];
    _results = [];
    for (_i = 0, _len = methods.length; _i < _len; _i++) {
      method = methods[_i];
      delegation = function(method, delegatedMethod) {
        return this[method] = function() {
          var attribute, target;
          target = this[options.to];
          target = _.isFunction(target) ? target.apply(this) : target;
          attribute = target[delegatedMethod];
          if (_.isFunction(attribute)) {
            return attribute.apply(target, arguments);
          } else {
            return attribute;
          }
        };
      };
      if (options.prefix) {
        prefixedMethod = options.prefix + method.substr(0, 1).toUpperCase() + method.substr(1);
      }
      _results.push(delegation.call(this.prototype, prefixedMethod || method, method));
    }
    return _results;
  };

}).call(this);
