// Generated by CoffeeScript 1.3.3
(function() {

  Traction.ViewCollection = (function() {

    function ViewCollection() {
      this.collection = {};
    }

    ViewCollection.prototype.add = function(nameOrMember, member) {
      if (member) {
        return this.collection[nameOrMember] = member;
      } else {
        return this.collection[_.uniqueId()] = nameOrMember;
      }
    };

    ViewCollection.prototype.get = function(name) {
      return this.collection[name];
    };

    ViewCollection.prototype.each = function(callback) {
      var member, name, _ref, _results;
      _ref = this.collection;
      _results = [];
      for (name in _ref) {
        member = _ref[name];
        _results.push(callback(member));
      }
      return _results;
    };

    ViewCollection.prototype.map = function(callback) {
      return _.map(this.collection, function(child, name) {
        return callback(child, name);
      });
    };

    ViewCollection.prototype.render = function() {
      this.each(function(member) {
        return member.render().delegateEvents();
      });
      return this;
    };

    ViewCollection.prototype.els = function() {
      return this.map(function(member) {
        return member.el;
      });
    };

    return ViewCollection;

  })();

}).call(this);
