// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  Traction.Bindings.FormattedContentBinding = (function(_super) {
    __extends(FormattedContentBinding, _super);

    function FormattedContentBinding(el, specification) {
      var _ref;
      this.el = el;
      this.specification = specification;
      _ref = this.specification.split("|"), this.property = _ref[0], this.formatters = 2 <= _ref.length ? __slice.call(_ref, 1) : [];
      this.formattingFunctions = _.map(this.formatters, (function(_this) {
        return function(formatter) {
          return _this._callFormattingFunction(formatter);
        };
      })(this));
    }

    FormattedContentBinding.prototype.update = function(options) {
      return this.el.innerHTML = _.reduce(this.formattingFunctions, (function(memo, formattingFunction) {
        return formattingFunction(memo);
      }), this.model.get(this.property));
    };

    FormattedContentBinding.prototype._callFormattingFunction = function(formatter) {
      var args, formattingFunction, _ref;
      _ref = formatter.split(":"), formatter = _ref[0], args = 2 <= _ref.length ? __slice.call(_ref, 1) : [];
      if (formattingFunction = Traction.TemplateHelpers.Formatting[formatter]) {
        return function(content) {
          return formattingFunction.apply(this, [content].concat(args));
        };
      } else {
        throw "Can't find formatter: " + formatter;
      }
    };

    return FormattedContentBinding;

  })(Traction.Bindings.Binding);

}).call(this);
