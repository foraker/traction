// Generated by CoffeeScript 1.3.3
(function() {
  Traction = {
  Rendering: {}
};

}).call(this);
;// Generated by CoffeeScript 1.3.3
(function() {
  var ComputedAttribute,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.Model = (function(_super) {

    __extends(Model, _super);

    function Model() {
      Backbone.Model.apply(this, arguments);
      this.computedAttributes || (this.computedAttributes = {});
      this._assignComputedAttributes();
    }

    Model.prototype._assignComputedAttributes = function() {
      var attribute, computation, _ref, _results;
      _ref = this.computedAttributes;
      _results = [];
      for (attribute in _ref) {
        computation = _ref[attribute];
        _results.push(new ComputedAttribute(attribute, computation).bindTo(this));
      }
      return _results;
    };

    return Model;

  })(Backbone.Model);

  ComputedAttribute = (function() {

    function ComputedAttribute(attribute, computation) {
      this.attribute = attribute;
      this.computation = computation;
    }

    ComputedAttribute.prototype.bindTo = function(model) {
      var dependency, _i, _len, _ref;
      this.model = model;
      _ref = this._dependencies();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        dependency = _ref[_i];
        this.model.on("change:" + dependency, this._assign, this);
      }
      return this._assign();
    };

    ComputedAttribute.prototype._dependencies = function() {
      return _.map(this._getterCalls(), function(match) {
        return match.replace(/this\.get\("/, "").replace(/\W/g, "");
      });
    };

    ComputedAttribute.prototype._getterCalls = function() {
      return this.computation.toString().match(/this\.get\(.*?\)/g);
    };

    ComputedAttribute.prototype._assign = function() {
      return this.model.set(this.attribute, this.computation.apply(this.model));
    };

    return ComputedAttribute;

  })();

}).call(this);
;// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.View = (function(_super) {

    __extends(View, _super);

    function View(options) {
      this.children = new Traction.ViewCollection();
      View.__super__.constructor.apply(this, arguments);
      this.renderer = this.buildRenderer();
    }

    View.prototype.buildRenderer = function() {
      if (this.template) {
        return new Traction.Rendering.TemplateStrategy({
          source: this.template,
          renderWithin: this.el
        });
      } else if (this.options.el) {
        return new Traction.Rendering.PrerenderedStrategy({
          renderWithin: this.el
        });
      } else {
        return new Traction.Rendering.AppendStrategy({
          renderWithin: this.el
        });
      }
    };

    View.prototype.proxyEvent = function(target, event, newEvent) {
      var callback,
        _this = this;
      callback = function() {
        var args;
        args = Array.prototype.slice.call(arguments);
        args.unshift(newEvent || event);
        return _this.trigger.apply(_this, args);
      };
      return this.listenTo(target, event, callback);
    };

    View.prototype.render = function() {
      this.renderer.render({
        binding: this.binding
      });
      this.renderer.outlet(this.children.render());
      return this;
    };

    return View;

  })(Backbone.View);

  Traction.View.extend = function(klass) {
    return _.extend(this.prototype, klass.prototype);
  };

}).call(this);
;// Generated by CoffeeScript 1.3.3
(function() {

  Traction.ViewCollection = (function() {

    function ViewCollection() {
      this.collection = {};
    }

    ViewCollection.prototype.add = function(nameOrMember, member) {
      if (member) {
        return this.collection[nameOrMember] = member;
      } else {
        return this.collection[_.uniqueId()] = nameOrMember;
      }
    };

    ViewCollection.prototype.get = function(name) {
      return this.collection[name];
    };

    ViewCollection.prototype.each = function(callback) {
      var member, name, _ref, _results;
      _ref = this.collection;
      _results = [];
      for (name in _ref) {
        member = _ref[name];
        _results.push(callback(member));
      }
      return _results;
    };

    ViewCollection.prototype.map = function(callback) {
      return _.map(this.collection, function(child, name) {
        return callback(child);
      });
    };

    ViewCollection.prototype.render = function() {
      this.each(function(member) {
        return member.render().delegateEvents();
      });
      return this;
    };

    ViewCollection.prototype.els = function() {
      return this.map(function(member) {
        return member.el;
      });
    };

    return ViewCollection;

  })();

}).call(this);
;// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.Rendering.NodeStrategy = (function(_super) {

    __extends(NodeStrategy, _super);

    function NodeStrategy() {
      return NodeStrategy.__super__.constructor.apply(this, arguments);
    }

    return NodeStrategy;

  })(Backbone.View);

}).call(this);
;// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.Rendering.AppendStrategy = (function(_super) {

    __extends(AppendStrategy, _super);

    function AppendStrategy() {
      return AppendStrategy.__super__.constructor.apply(this, arguments);
    }

    AppendStrategy.prototype.initialize = function() {
      return this.setElement(this.options.renderWithin);
    };

    AppendStrategy.prototype.render = function() {
      return this.$el.empty();
    };

    AppendStrategy.prototype.outlet = function(children) {
      return this.$el.append(children.els());
    };

    return AppendStrategy;

  })(Backbone.View);

}).call(this);
;// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.Rendering.PrerenderedStrategy = (function(_super) {

    __extends(PrerenderedStrategy, _super);

    function PrerenderedStrategy() {
      return PrerenderedStrategy.__super__.constructor.apply(this, arguments);
    }

    return PrerenderedStrategy;

  })(Traction.Rendering.NodeStrategy);

}).call(this);
;// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Traction.Rendering.TemplateStrategy = (function(_super) {

    __extends(TemplateStrategy, _super);

    function TemplateStrategy() {
      return TemplateStrategy.__super__.constructor.apply(this, arguments);
    }

    return TemplateStrategy;

  })(Traction.Rendering.NodeStrategy);

}).call(this);
